[gd_resource type="Shader" format=3 uid="uid://d0bbk0k8gcron"]

[resource]
code = "shader_type spatial;
render_mode unshaded, cull_disabled; // Enable transparency

uniform sampler2D noise_texture; // Assign a grayscale noise texture

//Grass params
uniform vec3 grass_color = vec3(0.2, 0.8, 0.2);
uniform vec3 dirt_color = vec3(0.0, 0.0, 0.0);
uniform float threshold_base = 0.3; // Initial threshold for black
uniform float threshold_growth = 0.005; // How much black increases per height

// Add wind
uniform float wind_strength = 0.1;
uniform float wind_speed = 0.3;
uniform float time_offset = 0.0;
uniform float wind_amplitude = 0.5;


// Set per plane using `set_instance_shader_parameter()`
uniform float layer_height;

void fragment() {
    vec2 uv = UV;
	
	//optional wind
 	uv.x += wind_amplitude*(sin(TIME * wind_speed + uv.y * 10.0) + sin(1.3 + (TIME * wind_speed + uv.y * 10.0 )) ) * wind_strength * layer_height;
	//uv.x += (sin(TIME * (wind_speed + layer_height * 0.3) + uv.y * 10.0) + 
         //sin(1.3 + (TIME * (wind_speed + layer_height * 0.3) + uv.y * 10.0))) 
         //* wind_strength * layer_height;

    float noise_val = texture(noise_texture, uv).r; // Sample noise texture

    // Dynamically increase the threshold with height
    float threshold = threshold_base + (layer_height * threshold_growth);
    
    // Step function to strictly classify areas as dirt or grass
	vec3 color = dirt_color;
	ALPHA = 0.0;
	if (noise_val > threshold){
		color = grass_color*layer_height;
		ALPHA = 1.0;
	}

   

    ALBEDO = color;
     // Ensure black (dirt) areas are fully transparent
}
"
